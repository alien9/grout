---

- name: Install dev packages
  apt: name={{ item }}
  with_items:
    - libgeos-dev
    - binutils
    - libproj-dev
    - gdal-bin

- name: Install python requirements
  pip: name={{ item.name }} version={{ item.version }}
  with_items:
    - { name: 'Django', version: '1.8' }
    - { name: 'djangorestframework', version: '3.1.1' }
    - { name: 'djangorestframework-gis', version: '0.8.1' }
    - { name: 'django-filter', version: '0.9.2' }
    - { name: 'jsonschema', version: '2.4.0' }
    - { name: 'django-pgjson', version: '0.2.3' }
    - { name: 'psycopg2', version: '2.6' }
    - { name: 'django-extensions', version: '1.5.2' }
    - { name: 'PyYAML', version: '3.11' }
  notify: Restart ashlar

- name: Install python dev requirements
  pip: name={{ item.name }} version={{ item.version }}
  with_items:
    - { name: 'ipython', version: '3.0.0' }
    - { name: 'ipdb', version: '0.8' }
  when: developing
  notify: Restart ashlar

- name: Touch log file if it does not exist
  command: touch {{ app_log }}
           creates={{ app_log }}

- name: Set log file permissions
  file: path={{ app_log }} owner={{ app_username }} group={{ app_username }} mode=0664

- name: Create configuration file directory
  file: path={{ root_conf_dir }}
        owner={{ app_username }}
        group={{ app_username }}
        mode=0750
        state=directory

- name: Create static files directory
  file: path={{ root_static_dir }}
        owner={{ app_username }}
        group={{ app_username }}
        mode=0775
        state=directory

- name: Copy app configuration
  template: src=secrets.yaml.j2 dest=/etc/secrets.yaml mode=0660
            owner={{ app_username }} group={{ app_username }}
  notify: Restart ashlar

- name: Configure gunicorn
  template: src=gunicorn-ashlar.py.j2 dest={{ root_conf_dir }}/gunicorn.py
            owner={{ app_username }} group={{ app_username }}
  notify: Restart ashlar

- name: Configure service definition
  template: src=upstart-ashlar.conf.j2 dest=/etc/init/ashlar.conf
  notify: Restart ashlar

- name: Copy nginx config
  template: src=nginx-default.j2 dest=/etc/nginx/sites-available/default
  notify: Restart nginx

- name: Run django collectstatic
  django_manage: command=collectstatic app_path={{ root_app_dir }}

- name: Run django migrations
  django_manage: command=migrate app_path={{ root_app_dir }}
